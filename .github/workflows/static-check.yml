name: Perform static checks
permissions:
  contents: read

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      extensions:
        description: |
          Comma-separated list of file extensions to scan
          (include the leading dot). By default, C/C++ and Python
          file types are skipped.
        type: "string"
        required: false
        default: ".c,.h,.cpp,.hpp,.inl,.py"
      skip:
        description: Comma-separated list of files (or globs) to skip.
        type: "string"
        required: false
        default: ""

jobs:
  check-spdx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Reuse linter
        run: pip install reuse

      - name: Find source code files without valid SPDX license header
        run: |
          # Parse inputs
          IFS=',' read -r -a exts <<< "${{ inputs.extensions }}"
          IFS=',' read -r -a skips <<< "${{ inputs.skip }}"

          # Build the name clauses for find
          find_names=""
          for ext in "${exts[@]}"; do
            find_names+="-name '*${ext}' -o "
          done
          # drop trailing "-o "
          find_names=${find_names% -o }

          # Build the prune (skip) clauses for find
          prune_clause=""
          for pat in "${skips[@]}"; do
            [[ -z "$pat" ]] && continue
            prune_clause+="-path '$pat' -prune -o "
          done
          prune_clause=${prune_clause% -o }

          # Compose and run reuse command
          cmd="find . $prune_clause \\( $find_names \\) -type f -print0 | xargs -0 reuse lint"
          echo "Running SPDX lint command:"
          echo "$cmd"
          eval "$cmd"
